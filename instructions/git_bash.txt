# add new file txt and edit:
 vim file_name
 
 and to quit press esc, then :wq!

# add new branch:
 git checkout -b branch_name

# switch between branches:
 git checkout branch_name

# list branches
 git branch

# write and quit from file:
 :wq!

# add changes:
 git add file_name

# add commit:
 git commit -m enter_commit_name

# push changes:
 git push

# merge branch to main:
 git pull origin branch_name_from_merge --allow-unrelated-histories
 or 
 git merge

# list branch logs:
 git log

# status:
 git status

# write to file:
 nano file_name
 
 and to write press ctrl+X

# remove untracked files:
 git clean .f file_name

# create new folder:
 mkdir folder_name

# go one step back:
 cd ..

# list directories:
 dir

# list files with details:
 ls -l

# move files between folders:
 mv file_name folder_name

 example: mv git_bash.txt instructions/

# Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected:
 git commit -a -m "commit message here"

# to show hidden files in gitignore
 ls -a

# to clear/empty file
 > file_name

# to restore file with committed logs:
 git restore file_name


